## ----------------------------------------------------------------------
## DataFrame 인스턴스/객체 생성 - 다양한 방식
## ----------------------------------------------------------------------
## 모듈 로딩
## ----------------------------------------------------------------------
import pandas as pd
## ----------------------------------------------------------------------
## -> Series 인스턴스의 속성 읽기
## ----------------------------------------------------------------------
def print_DF(df):
    print("\n--------------속성 읽기 -------------------")
    print('인덱스 :',df.index)
    print('컬럼즈 :',df.columns)
    print(f'데이터 :\n{df.values}, {type(df.values)}')
    print(f'형  태 : {df.shape}') ## 1차원으로 원소 수 반환
    print(f'차  원 : {df.ndim}') ## 1차원
    print(f'타  입 : \n{df.dtypes}')

## ----------------------------------------------------------------------
## -> 데이터 준비
## ----------------------------------------------------------------------
jumsu = [[99, 77, 55], [78,12,33], [98,23,91]]
idx = ['0번', '1번', '2번']
cols = ['국어','체육', '과학']

## ----------------------------------------------------------------------
## -> Series로 변환 저장
## ----------------------------------------------------------------------
## -> 데이터, 행인덱스
df1 = pd.DataFrame(jumsu, idx)

## -> 데이터, 행인덱스, 열인덱스
df2 = pd.DataFrame(jumsu,idx,cols)

## -> 데이터, 행인덱스, 열인덱스, 타입즈
df3 = pd.DataFrame(jumsu,idx,cols,dtype='int8')

## ----------------------------------------------------------------------
## -> List와 Series 데이터 표현/저장 방식 비교
## ----------------------------------------------------------------------
print_DF(df1)
print()
print_DF(df2)
print()
print_DF(df3)

