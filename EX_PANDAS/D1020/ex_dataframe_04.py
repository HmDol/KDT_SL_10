## ----------------------------------------------------------------------
## DataFrame 인스턴스/객체 생성 - 다양한 방식 SR, SR, ....
## ----------------------------------------------------------------------
## 모듈 로딩
## ----------------------------------------------------------------------
import pandas as pd
## ----------------------------------------------------------------------
## -> Series 인스턴스의 속성 읽기 함수
## ----------------------------------------------------------------------
def print_DF(df):
    print("\n--------------속성 읽기 -------------------")
    print('인덱스 :',df.index)
    print('컬럼즈 :',df.columns)
    print(f'데이터 :\n{df.values}, {type(df.values)}')
    print(f'형  태 : {df.shape}') ## 1차원으로 원소 수 반환
    print(f'차  원 : {df.ndim}') ## 1차원
    print(f'타  입 : \n{df.dtypes}')
    print(df)

## ----------------------------------------------------------------------
## -> 데이터 준비
## ----------------------------------------------------------------------
nameSR = pd.Series(['홍길동', '베트맨', '마징가'])
ageSR = pd.Series([100,200,99])


## ----------------------------------------------------------------------
## -> Series로 변환 저장
## ----------------------------------------------------------------------
## list, tuple 은 가로로, 즉 행단위로 저장
dataDF1 = pd.DataFrame([nameSR, ageSR])

# k:v 일 경우 key가 컬럼명, 즉 컬럼 단위 저장
dataDF2 = pd.DataFrame({'name' : nameSR, 'age': ageSR})
## ----------------------------------------------------------------------
## -> List와 Series 데이터 표현/저장 방식 비교
## ----------------------------------------------------------------------
print_DF(dataDF1)
print_DF(dataDF2)

