## ----------------------------------------------------------------------
## 클래스 정의 
## - 사물이 가진 고유의 특징(외형, 성질, 기능, 역할)
## - 클래스 기반으로 메모리 힙영역에 데이터가 저장됨
## - 구성 : 속성/필드 --- 변수 즉 데이터
##         기능/메서드 --- 함수
## ----------------------------------------------------------------------
## 클래스 정의 : 자동차를 정의/표현하는 타입
## 클래스 이름 : car
## 속      성 : 바퀴, 차번호, 색상, 종류, 주유, 무게, 길이, 너비 ....
## 메  서  드 : 전진, 후진, 정지
## ----------------------------------------------------------------------
class Car :
    # - 자동차의 속성/데이터들 중 공유/공통 되는 속성들 : 클래스 속성/변수
    weight = 1600
    widith = 1000
    height = 700  
    

    # - 객체/인스턴스 메모리 힙 저장 위한 메모리 스캔 및 할당
    # - __init__() 메서드 호출
    # - 매개변수 cls : 클래스 정보
    # def __new__(cls) :
    #     print('__new__()')
    #     obj = super().__new__(cls)
    #     print(f'obj => {id(obj)}')
    #     return obj



    # - 객체/인스턴스 속성 초기화 메서드
    # - 클래스이름() 메서드 즉, 생성자 메서드와 연결
    # - 인스턴스마다 고유의 값을 가지는 속성/변수 : 인스턴스 속성/변수
    def __init__(self, car_no, color,  kind,car_type):
        print("__init__")
        print(f'self => {id(self)}')
        self.car_no = car_no
        self.color = color
        self.car_type = car_type
        self.kind = kind


    ## ----------------------------------------------------------------------
    # - 인스턴스 메서드
    # - 인스턴스 속성들을 사용하느 메서드
    # - 인스턴스를 생성해야만 사용 가능한 메서드
    # - self가 필요함
    ## ----------------------------------------------------------------------

    
    def go(self, where) :
        print(f'{self.car_no}가 {where}에 간다')
        print(f'{self.car_no}의 색은 {self.color}')

    def back(self) :
        print(f'{self.car_no} 후진')
        print(f'{self.car_no}의 색은 {self.color}')


    def stop(self) :
        print(f'{self.car_no} 정지')
        print(f'{self.car_no}의 색은 {self.color}')


   

## ----------------------------------------------------------------------
## 클래스기반 객체/인스턴스 생성 : 생성자(Constructor) 메서드
## - 문법 : 변수명 = 클래스이름()
## ----------------------------------------------------------------------
myCar = Car('12가 1212', 'red', '새단', '하이브리드') ## 생성자 메서드
herCar = Car('49가 0000','black', 'SUV', '전기')
hisCar = Car('30가 0123','white', '히치백', '가솔린')


## ----------------------------------------------------------------------
## 객체/인스턴스의 속성 및 메서드 사용
## - 문법 : 객체명.속성
##         객체명.메서드명()
## ----------------------------------------------------------------------
myCar.back()
hisCar.go('집')
herCar.stop()
print(myCar.height)